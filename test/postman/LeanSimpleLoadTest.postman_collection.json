{
	"info": {
		"_postman_id": "292232e1-d203-423c-af2f-abf1c6dd6e81",
		"name": "LeanSimpleLoadTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2135853"
	},
	"item": [
		{
			"name": "validLogin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains token\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('token');",
							"    pm.expect(jsonData.message).to.eql('Login successful!');",
							"});",
							"",
							"pm.test(\"JSON response schema is valid\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"token\");",
							"    pm.expect(jsonData).to.have.property(\"message\");",
							"    pm.expect(jsonData.token).to.be.a(\"string\");",
							"    pm.expect(jsonData.message).to.be.a(\"string\");",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.token);",
							"",
							"pm.test(\"Response time is acceptable\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);  // Response time should be below 500ms",
							"});",
							"",
							"pm.test(\"Record response time\", function () {",
							"    console.log(\"Response time: \" + pm.response.responseTime + \"ms\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{valid_user_name}}\",\n    \"password\": \"{{valid_password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "getProfile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains user data\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('name', 'John Doe');",
							"    pm.expect(jsonData).to.have.property('email', 'test@example.com');",
							"});",
							"",
							"pm.test(\"JSON response schema is valid\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"email\");",
							"    pm.expect(jsonData.name).to.be.a(\"string\");",
							"    pm.expect(jsonData.email).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"Response time is acceptable\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);  // Response time should be below 500ms",
							"});",
							"",
							"pm.test(\"Record response time\", function () {",
							"    console.log(\"Response time: \" + pm.response.responseTime + \"ms\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"pm.test(\"JSON response schema is valid\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"message\");",
							"    pm.expect(jsonData.message).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"Response time is acceptable\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);  // Response time should be below 500ms",
							"});",
							"",
							"pm.test(\"Record response time\", function () {",
							"    console.log(\"Response time: \" + pm.response.responseTime + \"ms\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		}
	]
}